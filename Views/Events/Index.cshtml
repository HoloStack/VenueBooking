@model IEnumerable<venueBooking.Models.Event>
@{
    ViewData["Title"] = "Events Management";
}

@section Styles {
    <link rel="stylesheet" href="~/css/universal.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
}

<!-- Header Section -->
<div class="page-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1><i class="fas fa-calendar-alt me-3"></i>Events Management</h1>
                <p class="mb-0">Manage and organize all venue events</p>
            </div>
            <div class="col-md-4 text-end">
                <a asp-action="Create" class="btn-create">
                    <i class="fas fa-plus me-2"></i>New Event
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="stats-number">@Model.Count()</h3>
                <p class="stats-label">Total Events</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="stats-number">@Model.Count(e => e.EventDate >= DateTime.Now)</h3>
                <p class="stats-label">Upcoming Events</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="stats-number">@Model.Select(e => e.EventType?.Name).Distinct().Count()</h3>
                <p class="stats-label">Event Types</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="stats-number">@Model.Select(e => e.VenueId).Distinct().Count()</h3>
                <p class="stats-label">Venues Used</p>
            </div>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="filter-panel">
        <h5><i class="fas fa-filter me-2"></i>Filter Events</h5>
        <form method="get" asp-action="Index" class="filter-form">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="eventTypeId" class="form-label">Event Type</label>
                    <select name="eventTypeId" id="eventTypeId" class="form-select" asp-items="ViewBag.EventTypesFilter">
                        <option value="">All Event Types</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="fromDate" class="form-label">From Date</label>
                    <input type="date" name="fromDate" id="fromDate" class="form-control" value="@ViewBag.FromDate" />
                </div>
                <div class="col-md-3">
                    <label for="toDate" class="form-label">To Date</label>
                    <input type="date" name="toDate" id="toDate" class="form-control" value="@ViewBag.ToDate" />
                </div>
                <div class="col-md-2 d-flex align-items-end gap-2">
                    <button type="submit" class="btn btn-filter">
                        <i class="fas fa-search me-2"></i>Filter
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-clear">
                        <i class="fas fa-times me-2"></i>Clear
                    </a>
                </div>
            </div>
        </form>
    </div>

    <!-- Events Grid -->
    @if (Model.Any())
    {
        <div class="card-grid">
            @foreach (var evt in Model)
            {
                <div class="content-card fade-in event-card" data-event-id="@evt.EventId" style="cursor: pointer;">
                    <div class="event-info">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h5 class="text-primary-custom mb-0">
                                <i class="fas fa-star me-2"></i>@evt.EventName
                            </h5>
                            <span class="badge bg-@(evt.EventDate > DateTime.Now ? "success" : "secondary")-custom">
                                @(evt.EventDate > DateTime.Now ? "Upcoming" : "Past")
                            </span>
                        </div>
                        
                        <div class="event-details mb-3">
                            <p class="mb-2">
                                <i class="fas fa-calendar-day text-info-custom me-2"></i>
                                <strong>Date:</strong> @evt.EventDate.ToString("MMM dd, yyyy")
                            </p>
                            <p class="mb-2">
                                <i class="fas fa-clock text-warning-custom me-2"></i>
                                <strong>Time:</strong> @evt.EventDate.ToString("h:mm tt")
                            </p>
                            <p class="mb-2">
                                <i class="fas fa-map-marker-alt text-danger-custom me-2"></i>
                                <strong>Venue:</strong> @evt.Venue?.VenueName
                            </p>
                            <p class="mb-3">
                                <i class="fas fa-tag text-success-custom me-2"></i>
                                <strong>Type:</strong> 
                                <span class="badge bg-primary-custom">@evt.EventType?.Name</span>
                            </p>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(evt.Description))
                        {
                            <div class="event-description mb-3">
                                <p class="text-muted small">
                                    <i class="fas fa-info-circle me-1"></i>
                                    @(evt.Description.Length > 100 ? evt.Description.Substring(0, 100) + "..." : evt.Description)
                                </p>
                            </div>
                        }
                        
                        <div class="action-buttons d-flex justify-content-between">
                            <a asp-action="Details" asp-route-id="@evt.EventId" class="btn btn-info btn-sm" title="View Details">
                                <i class="fas fa-eye me-1"></i>Details
                            </a>
                            <a asp-action="Edit" asp-route-id="@evt.EventId" class="btn btn-warning btn-sm" title="Edit Event">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <a asp-action="Delete" asp-route-id="@evt.EventId" class="btn btn-danger btn-sm" title="Delete Event">
                                <i class="fas fa-trash me-1"></i>Delete
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="content-card">
            <div class="empty-state">
                <i class="fas fa-calendar-times"></i>
                <h4>No Events Found</h4>
                <p>No events match your current filter criteria.</p>
                <a asp-action="Create" class="btn-create">
                    <i class="fas fa-plus me-2"></i>Create First Event
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-submit form when filters change
            $('#eventTypeId').on('change', function() {
                if ($(this).val() !== '') {
                    $('.filter-form').submit();
                }
            });
            
            // Add loading animation to filter button
            $('.filter-form').on('submit', function() {
                var submitBtn = $('.btn-filter');
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Filtering...');
                submitBtn.prop('disabled', true);
            });
            
            // Animate stats cards on page load
            $('.stats-number').each(function() {
                var $this = $(this);
                var countTo = parseInt($this.text());
                
                if (!isNaN(countTo)) {
                    $({ countNum: 0 }).animate({
                        countNum: countTo
                    }, {
                        duration: 1000,
                        easing: 'swing',
                        step: function() {
                            $this.text(Math.floor(this.countNum));
                        },
                        complete: function() {
                            $this.text(countTo);
                        }
                    });
                }
            });
            
            // Enhanced tooltips
            $('[title]').tooltip({
                placement: 'top',
                trigger: 'hover'
            });
            // Double-click on event card to navigate to create booking page
            $('.event-card').on('dblclick', function() {
                const eventId = $(this).data('event-id');
                const createBookingUrl = '/Bookings/Create?eventId=' + eventId;
                window.location.href = createBookingUrl;
            });
        });
    </script>
}
